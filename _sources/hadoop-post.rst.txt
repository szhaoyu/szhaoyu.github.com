
.. post:: Dec 19, 2018
   :tags: hadoop
   :author: Zhaoyu

review hadoop architecture & usage
==================================

1. Principle:
    Hadoop plateform includes HDFS and YARN two important modules.
    
    HDFS includes NameNode, DataNode two roles, and for high availablity there is also a Secondary NameNode which is a hot backup.

    YARN includes ResourceManager, NodeManager. ResourceManager responsible for monitoring and scheduing computation resources. NodeManager responsible for negotiating with remote master.

    YARN provides MapReduce framework with Application Container.

    The proccess flow of Map-reduce:
    
    .. image:: _static/mr.png

    .. image:: _static/mr_scale.png

2. Usage

    a. hadoop startup or shutdown
        hdfs namenode -format
        sbin/hadoop-daemon.sh start namenode
        sbin/hadoop-daemon.sh start secondarynamenode
        sbin/hadoop-daemon.sh start DataNode
        sbin/yarn-daemon.sh start resourcemanager
        sbin/yarn-daemon.sh start nodemanager

    b. monitoring WebUI
        http://127.0.0.1:50070/dfshealth.html#tab-overview
        http://127.0.0.1:8088/cluster


    c. hdfs 
        hadoop fs -ls 
        hadoop fs -rm -r test
        hadoop fs -cat test/part-r-00000  | less
        hadoop fs -put files/file1.txt test/
    
    d. yarn
        yarn jar xxxx.xxx.AppYY.jar <input> <output>

3. points

    a. Mapper read file format
        key: line number or index number of text line
        value: line's content

    b. reserve order of output key

    .. code-block:: java
    public static class CustomTextComparator implements RawComparator {

        public int compare(WritableComparable a, WritableComparable b) {
            return b.compareTo(a);
        }

        public int compare(Object a, Object b) {
            return this.compare((WritableComparable)a, (WritableComparable)b);  
        }

        public int compare(byte[] b1, int s1, int l1, byte[] b2, int s2, int l2) {
            return WritableComparator.compareBytes(b2, s2, l2, b1, s1, l1);
        }

    }

    job.setSortComparatorClass(CustomTextComparator.class);

